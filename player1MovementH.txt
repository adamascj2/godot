using Godot;
using System;
///H
using Steamworks;
using FlatBuffers;
///H
public class player1Movement : KinematicBody2D
{
   Vector2 velocity;
	int speed = 200;
	///E1
	 Global global;
	///H
	KinematicBody2D player1;  
	KinematicBody2D player2;
	protected Callback<P2PSessionRequest_t> Callback_P2PSessionRequest;
	protected Callback<P2PSessionConnectFail_t> Callback_P2PSessionConnectFailed;
	
	///H
	
	public override void _Ready()
	{
	  global = GetParent().GetNode("../Global") as Global;
	///H
	player1 = GetParent().GetNode("../GUI/player1") as KinematicBody2D;
	player2 = GetParent().GetNode("../GUI/player2") as KinematicBody2D;
		Callback_P2PSessionRequest = Callback<P2PSessionRequest_t>.Create(OnP2PSessionRequest);
		Callback_P2PSessionConnectFailed = Callback<P2PSessionConnectFail_t>.Create(OnP2PSessionConnectionFailed);
///H
}
///E1
	public override void _Input(InputEvent @event)
	{
		velocity = new Vector2();

		if (Input.IsActionPressed("ui_right"))
			velocity.x += 1;
		if (Input.IsActionPressed("ui_left"))
			velocity.x -= 1;
		if (Input.IsActionPressed("ui_down"))
			velocity.y += 1;
		if (Input.IsActionPressed("ui_up"))
			velocity.y -= 1;

		velocity = velocity.Normalized() * speed;
	}

	public override void _PhysicsProcess(float delta){
		if (global.playingAsHost)    ////E1
		  velocity =  MoveAndSlide(velocity);
	}
	///H
	// ----------- ACCEPT OR REJECT INCOMING CONNECTION -----------
	public void OnP2PSessionRequest(P2PSessionRequest_t request)
	{
		if (request.m_steamIDRemote == global.player1 || request.m_steamIDRemote == global.player2)
		{
			SteamNetworking.AcceptP2PSessionWithUser(request.m_steamIDRemote);
			GD.Print("You have accepted incoming connection from " + SteamFriends.GetFriendPersonaName(request.m_steamIDRemote));
		}
		else
			GD.Print("A connection was just rejected from " + request.m_steamIDRemote + ".");
	}

	public void OnP2PSessionConnectionFailed(P2PSessionConnectFail_t failure) => GD.Print("P2P session failed. Error code: " + failure.m_eP2PSessionError);

	// ----------- RECEIVE PACKETS -----------
	public override void _Process(float delta)
	{
		while (SteamNetworking.IsP2PPacketAvailable(out uint packetSize))
		{
			byte[] incomingPacket = new byte[packetSize];

			// Receive data
			if (SteamNetworking.ReadP2PPacket(incomingPacket, packetSize, out uint bytesRead, out CSteamID remoteID))
			{
				ByteBuffer buff = new ByteBuffer(incomingPacket);
				var otherPlayer = NetworkPacket.OtherPlayer.GetRootAsOtherPlayer(buff);

				switch (otherPlayer.Action)
				{
					case 1:
						moveOtherPlayer(otherPlayer);
						break;
					case 2:
						break;
				}
			}
		}
	}

	private void moveOtherPlayer(NetworkPacket.OtherPlayer otherPlayer)
	{
		NetworkPacket.Vec2 pos = otherPlayer.Pos.Value;

		if (global.playingAsHost)
			player2.SetTransform(new Transform2D(0, new Vector2(pos.X, pos.Y)));
		else
			player1.SetTransform(new Transform2D(0, new Vector2(pos.X, pos.Y)));
	}
 

	
	///H
	
}//fim da classe
